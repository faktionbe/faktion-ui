{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "task",
  "type": "registry:component",
  "title": "Task",
  "description": "A task component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "collapsible"
  ],
  "files": [
    {
      "path": "registry/components/task.tsx",
      "content": "import type { ComponentProps, FC } from 'react';\nimport { ChevronDownIcon, SearchIcon } from 'lucide-react';\n\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from '@/components/ui/collapsible';\nimport { cn } from '@/lib/utils';\n\nexport type TaskItemFileProps = ComponentProps<'div'>;\n\nconst TaskItemFile: FC<TaskItemFileProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      'inline-flex items-center gap-1 rounded-md border bg-secondary px-1.5 py-0.5 text-foreground text-xs',\n      className\n    )}\n    {...props}>\n    {children}\n  </div>\n);\n\nexport type TaskItemProps = ComponentProps<'div'>;\n\nconst TaskItem: FC<TaskItemProps> = ({ children, className, ...props }) => (\n  <div\n    className={cn('text-muted-foreground text-sm', className)}\n    {...props}>\n    {children}\n  </div>\n);\n\nexport type TaskProps = ComponentProps<typeof Collapsible>;\n\nconst Task: FC<TaskProps> = ({ defaultOpen = true, className, ...props }) => (\n  <Collapsible\n    className={cn(\n      'data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 data-[state=closed]:animate-out data-[state=open]:animate-in',\n      className\n    )}\n    defaultOpen={defaultOpen}\n    {...props}\n  />\n);\n\nexport type TaskTriggerProps = ComponentProps<typeof CollapsibleTrigger> & {\n  title: string;\n};\n\nconst TaskTrigger: FC<TaskTriggerProps> = ({\n  children,\n  className,\n  title,\n  ...props\n}) => (\n  <CollapsibleTrigger\n    asChild\n    className={cn('group', className)}\n    {...props}>\n    {children ?? (\n      <div className='flex cursor-pointer items-center gap-2 text-muted-foreground hover:text-foreground'>\n        <SearchIcon className='size-4' />\n        <p className='text-sm'>{title}</p>\n        <ChevronDownIcon className='size-4 transition-transform group-data-[state=open]:rotate-180' />\n      </div>\n    )}\n  </CollapsibleTrigger>\n);\n\nexport type TaskContentProps = ComponentProps<typeof CollapsibleContent>;\n\nconst TaskContent: FC<TaskContentProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <CollapsibleContent\n    className={cn(\n      'data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 text-popover-foreground outline-none data-[state=closed]:animate-out data-[state=open]:animate-in',\n      className\n    )}\n    {...props}>\n    <div className='mt-4 space-y-2 border-muted border-l-2 pl-4'>\n      {children}\n    </div>\n  </CollapsibleContent>\n);\n\ninterface TaskComposition {\n  ItemFile: typeof TaskItemFile;\n  Item: typeof TaskItem;\n  Trigger: typeof TaskTrigger;\n  Content: typeof TaskContent;\n}\n\nconst RootWithComposition: TaskComposition & typeof Task = Object.assign(Task, {\n  ItemFile: TaskItemFile,\n  Item: TaskItem,\n  Trigger: TaskTrigger,\n  Content: TaskContent,\n});\n\nexport { RootWithComposition as Task };\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "chat"
  ]
}