{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sources",
  "type": "registry:component",
  "title": "Sources",
  "description": "A source component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "collapsible"
  ],
  "files": [
    {
      "path": "registry/components/sources.tsx",
      "content": "import type { ComponentProps, FC } from 'react';\nimport { BookIcon, ChevronDownIcon } from 'lucide-react';\n\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from '@/components/ui/collapsible';\nimport { cn } from '@/lib/utils';\n\nexport type SourcesProps = ComponentProps<'div'>;\n\nconst Sources: FC<SourcesProps> = ({ className, ...props }) => (\n  <Collapsible\n    className={cn('not-prose mb-4 text-primary text-xs', className)}\n    {...props}\n  />\n);\n\nexport type SourcesTriggerProps = ComponentProps<typeof CollapsibleTrigger> & {\n  count: number;\n};\n\nconst SourcesTrigger: FC<SourcesTriggerProps> = ({\n  className,\n  count,\n  children,\n  ...props\n}) => (\n  <CollapsibleTrigger\n    className='flex items-center gap-2'\n    {...props}>\n    {children ?? (\n      <>\n        <p className='font-medium'>Used {count} sources</p>\n        <ChevronDownIcon className='h-4 w-4' />\n      </>\n    )}\n  </CollapsibleTrigger>\n);\n\nexport type SourcesContentProps = ComponentProps<typeof CollapsibleContent>;\n\nconst SourcesContent: FC<SourcesContentProps> = ({ className, ...props }) => (\n  <CollapsibleContent\n    className={cn(\n      'mt-3 flex w-fit flex-col gap-2',\n      'data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 outline-none data-[state=closed]:animate-out data-[state=open]:animate-in',\n      className\n    )}\n    {...props}\n  />\n);\n\nexport type SourceProps = ComponentProps<'a'>;\n\nconst Source: FC<SourceProps> = ({ href, title, children, ...props }) => (\n  <a\n    className='flex items-center gap-2'\n    href={href}\n    rel='noreferrer'\n    target='_blank'\n    {...props}>\n    {children ?? (\n      <>\n        <BookIcon className='h-4 w-4' />\n        <span className='block font-medium'>{title}</span>\n      </>\n    )}\n  </a>\n);\n\ninterface SourcesComposition {\n  Trigger: typeof SourcesTrigger;\n  Content: typeof SourcesContent;\n  Source: typeof Source;\n}\n\nconst RootWithComposition: SourcesComposition & typeof Sources = Object.assign(\n  Sources,\n  {\n    Trigger: SourcesTrigger,\n    Content: SourcesContent,\n    Source,\n  }\n);\n\nexport { RootWithComposition as Sources };\n",
      "type": "registry:component"
    }
  ]
}