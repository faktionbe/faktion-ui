{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "notification",
  "type": "registry:component",
  "title": "Notification",
  "description": "A notification component",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "https://faktion-ui.vercel.app/r/use-composition"
  ],
  "files": [
    {
      "path": "registry/components/notification.tsx",
      "content": "import { type FC, type ReactNode } from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { useComposition } from '@/hooks/use-composition';\nimport { cn } from '@/lib/utils';\n\nconst notificationContentVariants = cva(\n  'absolute z-10 rounded-full flex items-center justify-center cursor-pointer hover:bg-accent/80',\n  {\n    variants: {\n      side: {\n        'top-right': '-right-1/2 -translate-x-1/2 -top-1/2 translate-y-1/2',\n        'top-left': '-left-1/2 translate-x-1/2 -top-1/2 translate-y-1/2',\n        'bottom-right':\n          '-right-1/2 -translate-x-1/2 -bottom-1/2 -translate-y-1/2',\n        'bottom-left': '-left-1/2 translate-x-1/2 -bottom-1/2 -translate-y-1/2',\n      },\n      size: {\n        md: 'w-6 h-6',\n        lg: 'w-8 h-8',\n      },\n      variant: {\n        default: 'bg-accent text-accent-foreground',\n      },\n    },\n    defaultVariants: {\n      side: 'top-right',\n      size: 'md',\n      variant: 'default',\n    },\n  }\n);\nexport interface NotificationContentProps\n  extends VariantProps<typeof notificationContentVariants> {\n  children: ReactNode;\n  className?: string;\n  onClick?: () => void;\n}\nconst NotificationContent: FC<NotificationContentProps> = ({\n  children,\n  className,\n  onClick,\n  ...props\n}) => (\n  <button\n    type='button'\n    className={cn(notificationContentVariants(props), className)}\n    onClick={onClick}>\n    {children}\n  </button>\n);\nNotificationContent.displayName = 'NotificationContent';\n\nconst notificationVariants = cva('relative w-fit h-fit');\ninterface NotificationProps extends VariantProps<typeof notificationVariants> {\n  children: ReactNode;\n  className?: string;\n}\ninterface NotificationComposition {\n  Content: typeof NotificationContent;\n}\nconst Root: FC<NotificationProps> = ({ children: _children, className }) => {\n  const [children, content] = useComposition(\n    _children,\n    NotificationContent.displayName\n  );\n\n  return (\n    <div className={cn(notificationVariants(), className)}>\n      {children}\n      {content}\n    </div>\n  );\n};\nRoot.displayName = 'Notification';\n\nconst RootWithComposition: typeof Root & NotificationComposition =\n  Object.assign(Root, {\n    Content: NotificationContent,\n  });\n\nexport { RootWithComposition as Notification };\n",
      "type": "registry:component"
    }
  ]
}