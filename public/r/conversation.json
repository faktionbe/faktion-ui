{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "conversation",
  "type": "registry:component",
  "title": "Conversation",
  "description": "A conversation component",
  "dependencies": [
    "use-stick-to-bottom",
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "registry/components/conversation.tsx",
      "content": "import type { ComponentProps, FC } from 'react';\nimport { useCallback } from 'react';\nimport { ArrowDownIcon } from 'lucide-react';\nimport { StickToBottom, useStickToBottomContext } from 'use-stick-to-bottom';\n\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\nexport type ConversationProps = ComponentProps<typeof StickToBottom>;\n\nconst Conversation: FC<ConversationProps> = ({ className, ...props }) => (\n  <StickToBottom\n    className={cn('relative flex-1 overflow-y-auto', className)}\n    initial='smooth'\n    resize='smooth'\n    role='log'\n    {...props}\n  />\n);\n\nexport type ConversationContentProps = ComponentProps<\n  typeof StickToBottom.Content\n>;\n\nconst ConversationContent: FC<ConversationContentProps> = ({\n  className,\n  ...props\n}) => (\n  <StickToBottom.Content\n    className={cn('p-4', className)}\n    {...props}\n  />\n);\n\nexport type ConversationScrollButtonProps = ComponentProps<typeof Button>;\n\nconst ConversationScrollButton: FC<ConversationScrollButtonProps> = ({\n  className,\n  ...props\n}) => {\n  const { isAtBottom, scrollToBottom } = useStickToBottomContext();\n\n  const handleScrollToBottom = useCallback(async () => {\n    await scrollToBottom();\n  }, [scrollToBottom]);\n\n  return (\n    !isAtBottom && (\n      <Button\n        className={cn(\n          'absolute bottom-4 left-[50%] translate-x-[-50%] rounded-full',\n          className\n        )}\n        onClick={handleScrollToBottom}\n        size='icon'\n        type='button'\n        variant='outline'\n        {...props}>\n        <ArrowDownIcon className='size-4' />\n      </Button>\n    )\n  );\n};\n\ninterface ConversationComposition {\n  Content: typeof ConversationContent;\n  ScrollButton: typeof ConversationScrollButton;\n}\n\nconst RootWithComposition: ConversationComposition & typeof Conversation =\n  Object.assign(Conversation, {\n    Content: ConversationContent,\n    ScrollButton: ConversationScrollButton,\n  });\n\nexport { RootWithComposition as Conversation };\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "chat"
  ]
}